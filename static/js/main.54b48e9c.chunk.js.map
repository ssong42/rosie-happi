{"version":3,"sources":["assets/icons8-menu.svg","components/Header.js","components/Info.js","components/Submit.js","components/Cards.js","components/Loading.js","components/Answer.js","constants.js","containers/Questions.js","components/constants.js","containers/History.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","sidebar","setSidebar","className","src","menuIcon","onClick","to","Info","Submit","Cards","questions","answers","onChange","onSubmitClick","cards","map","question","index","style","color","textAlign","width","type","value","marginLeft","unit","Load","Answer","onBackClick","foundAnswer","factor","exponential","scale","text","emoji","lower","upper","Number","MAX_VALUE","backendURI","Question","Array","length","fill","setAnswers","totalHappiness","setTotalHappiness","verse","setVerse","state","setState","event","target","temp","answer","filter","each","setTimeout","axios","post","then","res","console","log","catch","err","History","history","setHistory","useEffect","get","data","fontSize","class","item","date","Date","toLocaleDateString","weekday","month","day","findAnswer","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54b48e9c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icons8-menu.5cc298bd.svg\";","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport menuIcon from \"../assets/icons8-menu.svg\";\n\nlet Header = () => {\n  let [sidebar, setSidebar] = useState(0);\n  return (\n    <div>\n      <div className={sidebar ? \"sideNav\" : \"sideNav close\"}>\n        <img src={menuIcon} className=\"menuIcon\" onClick={() => setSidebar(!sidebar)}/>\n        <h3><Link className=\"navbarLink\" to=\"/history\">History</Link></h3>\n        <h3><Link className=\"navbarLink\" to=\"/\">Questions</Link></h3>\n      </div>\n      <div className=\"header\">\n        <div className=\"menuIconDiv\" onClick={() => setSidebar(!sidebar)}>\n          <img src={menuIcon} className=\"menuIcon\" />\n        </div>\n        <div className=\"title\">Is Rosie Happy?</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","\nlet Info = () => {\n    return (\n        <div className=\"equation\">\n            Rosie's Equation to Happiness.\n        </div>\n    )\n}\n\nexport default Info;","let Submit = ({onClick}) => {\n    return (\n        <button onClick={onClick} className=\"submit\">\n            Submit\n        </button>\n    )\n}\n\nexport default Submit;","import Submit from './Submit';\n\nlet Cards = ({ questions, answers, onChange, onSubmitClick }) => {\n  const cards = questions.map((question, index) => (\n    <div className=\"card\" key={index}>\n      <p style={{ color: \"white\" }}>{question.question}</p>\n      <label>\n        <input\n          style={{ textAlign: \"right\", width: \"3rem\" }}\n          className=\"input\"\n          type=\"number\"\n          value={answers[index]}\n          onChange={onChange(index)}\n        />\n        <span style={{ color: \"white\", marginLeft: \"10px\" }}>\n          {question.unit}\n        </span>\n      </label>\n    </div>\n  ));\n\n  return (\n      <div>\n          <div className=\"cards\">{cards}</div>\n          <Submit onClick={onSubmitClick}/>\n      </div>\n  );\n};\n\nexport default Cards;\n","import { DiamonLoading } from \"react-loadingg\";\nimport { MeteorRainLoading } from \"react-loadingg\";\nimport { CoffeeLoading } from \"react-loadingg\";\n\nlet Load = () => {\n  return (\n      <div>\n\n    <div className=\"equation\">Calculating... Please Wait...</div>\n    <div className=\"loadingContainer\">\n      <div className=\"loadingThing\">\n        <DiamonLoading color=\"#DFAE9F\" />\n      </div>\n      <div className=\"loadingThing\">\n        <MeteorRainLoading color=\"#DFAE9F\" />\n      </div>\n      <div className=\"loadingThing\">\n        <CoffeeLoading color=\"#DFAE9F\" />\n      </div>\n    </div>\n      </div>\n  );\n};\n\nexport default Load;\n","\nlet Answer = ({onBackClick, foundAnswer}) => {\n\n  return (\n    <div>\n      <div className=\"equation\">{foundAnswer}</div>\n      <button className=\"submit\" onClick={onBackClick}>Back</button>\n    </div>\n  )\n};\n\nexport default Answer;","let questions = [\n    {\n      question: \"How many hours of sleep did Rosie get?\",\n      factor: 4,\n      unit: \"hours\",\n      type: \"number\",\n    },\n    {\n      question: \"How many cups of coffee did Rosie drink today?\",\n      factor: 8,\n      unit: \"cups\",\n      type: \"number\",\n    },\n    {\n      question: \"How many hours of homework does Rosie have?\",\n      factor: -1,\n      exponential: 2,\n      unit: \"hours\",\n      type: \"number\",\n    },\n    {\n      question: \"How full is Rosie's stomach?\",\n      factor: 1,\n      unit: \"%\",\n      type: \"number\",\n    },\n    {\n      question: \"How many hugs did Rosie get from Steven?\",\n      factor: 400,\n      unit: \"hugs\",\n      type: \"number\",\n    },\n  ];\n\n  let scale = [\n    {\n      text: \"Not right now (-_-)\",\n      emoji: \"🤬\",\n      lower: 0,\n      upper: 3,\n    },\n    {\n      text: \"I feel mehhh...\",\n      emoji: \"😕\",\n      lower: 4,\n      upper: 9,\n    },\n    {\n      text: \"I've been in shittier situations...\",\n      emoji: \"🙃\",\n      lower: 9,\n      upper: 12,\n    },\n    {\n      text: \"Things are looking up.\",\n      emoji: \"😌\",\n      lower: 13,\n      upper: 35,\n    },\n    {\n      text: \"I am bitchin.\",\n      emoji: \"😜\",\n      lower: 36,\n      upper: 47,\n    },\n    {\n      text: \"FUck YeS! I feel GEWD!\",\n      emoji: \"🤩\",\n      lower: 48,\n      upper: 67,\n    },\n    {\n      text: \"Nothing can stop me BITCH!\",\n      emoji: \"🥳\",\n      lower: 68,\n      upper: 79,\n    },\n    {\n      text: \"I found peace with myself. I am Nirvana!\",\n      emoji: \"🧘‍♀️\",\n      lower: 80,\n      upper: 102,\n    },\n    {\n      text: \"I had too much coffeee. I'm high as fuck.\",\n      emoji: \"☕️\",\n      lower: 103,\n      upper: 125,\n    },\n    {\n      text: \"I like turtles.\",\n      emoji: \"🐢\",\n      lower: 126,\n      upper: 170,\n    },\n    {\n      text: \"I fucking love my boyfriend.\",\n      emoji: \"🥰\",\n      lower: 171,\n      upper: Number.MAX_VALUE,\n    },\n  ];\n\nlet backendURI = \"https://rosie-happi-backend.herokuapp.com\"\n\nexport {\n    backendURI,\n    questions,\n    scale\n};","import React, { Fragment, useState } from \"react\";\n\nimport Info from \"../components/Info\";\nimport Cards from \"../components/Cards\";\nimport Load from \"../components/Loading\";\nimport Answer from \"../components/Answer\";\n\nimport { CALCULATING, FINISHED, NEW } from \"../components/constants\";\nimport { backendURI, questions, scale } from \"../constants\";\nimport axios from \"axios\";\n\nfunction Question() {\n  const [answers, setAnswers] = useState(Array(questions.length).fill(\"0\"));\n  const [totalHappiness, setTotalHappiness] = useState(0);\n  const [verse, setVerse] = useState(\"\");\n  const [state, setState] = useState(NEW);\n\n  let handleInputChange = (index) => (event) => {\n    let value = event.target.value;\n\n    let temp = [...answers];\n    temp[index] = value;\n\n    setAnswers(temp);\n  };\n\n  let onSubmitClick = () => {\n    setState(CALCULATING);\n\n    //calculate total happiness\n    let temp = 0;\n    answers.map((answer, index) => {\n      if (questions[index].exponential)\n        temp +=\n          answer ** questions[index].exponential * questions[index].factor;\n      else temp += answer * questions[index].factor;\n    });\n    setTotalHappiness(temp);\n\n    //find the verse amongst the scale\n    let foundAnswer = scale.filter((each) => {\n      if (totalHappiness >= each.lower && totalHappiness <= each.upper)\n        return true;\n      return false;\n    });\n    setVerse(foundAnswer[0].text);\n\n    //set timer for backend\n    setTimeout(() => {\n      setState(FINISHED);\n    }, 5000);\n\n    //call to backend and add new record\n    axios\n      .post(backendURI + \"/happy\", {\n        totalHappiness: temp,\n        text: foundAnswer[0].text,\n      })\n      .then((res) => {\n        console.log(\"FINISHED REQUEST\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  let onBackClick = () => {\n    setAnswers(Array(questions.length).fill(\"0\"));\n    setState(NEW);\n  };\n\n  return (\n    <Fragment>\n      <Info />\n      {state === NEW && (\n        <Cards\n          questions={questions}\n          answers={answers}\n          onChange={handleInputChange}\n          onSubmitClick={onSubmitClick}\n        />\n      )}\n      {state === CALCULATING && <Load />}\n      {state === FINISHED && (\n        <Answer\n          totalHappiness={totalHappiness}\n          onBackClick={onBackClick}\n          foundAnswer={verse}\n        />\n      )}\n    </Fragment>\n  );\n}\n\nexport default Question;\n","let NEW = 0;\nlet CALCULATING = 1;\nlet FINISHED = 2;\n\n\nexport { NEW, CALCULATING, FINISHED}","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { backendURI, scale } from \"../constants\";\n\nlet History = () => {\n  const [history, setHistory] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(backendURI + \"/happy\")\n      .then((res) => {\n        console.log(res.data);\n        setHistory(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h3 style={{ color: \"#C19999\", fontSize: \"26px\" }}>History</h3>\n      <hr class=\"solid\"></hr>\n      {history.length &&\n        history.map((item) => {\n          const D = new Date(item.date);\n          var options = { weekday: \"short\", month: \"short\", day: \"numeric\" };\n          let date = D.toLocaleDateString(\"en-US\", options); // Saturday, September 17, 2016\n\n          let findAnswer = scale.filter((each) => {\n            if (\n              item.totalHappiness >= each.lower &&\n              item.totalHappiness <= each.upper\n            )\n              return true;\n            return false;\n          });\n\n          return (\n            <div>\n              <div key={item[\"_id\"]}>\n                <div className=\"historyContainer\">\n                  <p className={\"historyDate\"}>Date: {date}</p>\n                  <div className=\"historyContainer\">\n                    <span className={\"historyText\"}>{item.text}</span>\n                  </div>\n                </div>\n                <span className={\"historyEmoji\"}>\n                  {findAnswer && findAnswer.length && findAnswer[0].emoji}\n                </span>\n              </div>\n              <hr className=\"solid\"></hr>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default History;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Info from \"./components/Info\";\nimport Question from \"./containers/Questions\";\nimport History from \"./containers/History\";\n\nfunction App() {\n\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/history\">\n          <History />\n        </Route>\n        <Route path=\"/\">\n          <Question />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}