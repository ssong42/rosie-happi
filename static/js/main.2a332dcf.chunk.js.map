{"version":3,"sources":["components/Header.js","components/Submit.js","components/Cards.js","components/Info.js","components/Loading.js","components/Answer.js","App.js","components/constants.js","reportWebVitals.js","index.js"],"names":["Header","className","Submit","onClick","Cards","questions","answers","onChange","onSubmitClick","cards","map","question","index","style","color","textAlign","width","type","value","marginLeft","unit","Info","Load","scale","text","lower","upper","Number","MAX_VALUE","Answer","totalHappiness","onBackClick","findAnswer","filter","each","App","factor","exponential","useState","Array","length","fill","setAnswers","setTotalHappiness","state","setState","useEffect","setTimeout","temp","answer","event","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a332dcf.chunk.js","sourcesContent":["let Header = () => {\n    return (\n        <div className=\"header\">\n            <div className=\"title\">Is Rosie Happy?</div>\n        </div>\n    )\n}\n\nexport default Header;","let Submit = ({onClick}) => {\n    return (\n        <button onClick={onClick} className=\"submit\">\n            Submit\n        </button>\n    )\n}\n\nexport default Submit;","import Submit from './Submit';\n\nlet Cards = ({ questions, answers, onChange, onSubmitClick }) => {\n  const cards = questions.map((question, index) => (\n    <div className=\"card\" key={index}>\n      <p style={{ color: \"white\" }}>{question.question}</p>\n      <label>\n        <input\n          style={{ textAlign: \"right\", width: \"3rem\" }}\n          className=\"input\"\n          type=\"number\"\n          value={answers[index]}\n          onChange={onChange(index)}\n        />\n        <span style={{ color: \"white\", marginLeft: \"10px\" }}>\n          {question.unit}\n        </span>\n      </label>\n    </div>\n  ));\n\n  return (\n      <div>\n          <div className=\"cards\">{cards}</div>\n          <Submit onClick={onSubmitClick}/>\n      </div>\n  );\n};\n\nexport default Cards;\n","\nlet Info = () => {\n    return (\n        <div className=\"equation\">\n            Rosie's Equation to Happiness.\n        </div>\n    )\n}\n\nexport default Info;","import { DiamonLoading } from \"react-loadingg\";\nimport { MeteorRainLoading } from \"react-loadingg\";\nimport { CoffeeLoading } from \"react-loadingg\";\n\nlet Load = () => {\n  return (\n      <div>\n\n    <div className=\"equation\">Calculating... Please Wait...</div>\n    <div className=\"loadingContainer\">\n      <div className=\"loadingThing\">\n        <DiamonLoading color=\"#DFAE9F\" />\n      </div>\n      <div className=\"loadingThing\">\n        <MeteorRainLoading color=\"#DFAE9F\" />\n      </div>\n      <div className=\"loadingThing\">\n        <CoffeeLoading color=\"#DFAE9F\" />\n      </div>\n    </div>\n      </div>\n  );\n};\n\nexport default Load;\n","let scale = [\n  {\n    text: \"Not right now (-_-)\",\n    lower: 0,\n    upper: 3,\n  },\n  {\n    text: \"I feel mehhh...\",\n    lower: 4,\n    upper: 9,\n  },\n  {\n    text: \"I've been in shittier situations...\",\n    lower: 9,\n    upper: 12,\n  },\n  {\n    text: \"I love life.\",\n    lower: 13,\n    upper: 35,\n  },\n  {\n    text: \"I am bitchin.\",\n    lower: 36,\n    upper: 47,\n  },\n  {\n    text: \"FUck YeS! I feel GEWD!\",\n    lower: 48,\n    upper: 67,\n  },\n  {\n    text: \"Nothing can stop me BITCH!\",\n    lower: 68,\n    upper: 79,\n  },\n  {\n    text: \"I found peace with myself. I am Nirvana!\",\n    lower: 80,\n    upper: 102,\n  },\n  {\n    text: \"I had too much coffeee. I'm high as fuck.\",\n    lower: 103,\n    upper: 125,\n  },\n  {\n    text: \"I like turtles.\",\n    lower: 126,\n    upper: 170,\n  },\n  {\n    text: \"I fucking love my boyfriend.\",\n    lower: 171,\n    upper: Number.MAX_VALUE,\n  },\n];\n\nlet Answer = ({totalHappiness, onBackClick}) => {\n  let findAnswer = scale.filter((each) => {\n    if (totalHappiness >= each.lower && totalHappiness <= each.upper)\n      return true;\n    return false;\n  });\n\n  return (\n    <div>\n      <div className=\"equation\">{findAnswer[0].text}</div>\n      <button className=\"submit\" onClick={onBackClick}>Back</button>\n    </div>\n  )\n};\n\nexport default Answer;","import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\n\nimport Header from \"./components/Header\";\nimport Cards from \"./components/Cards\";\nimport Info from \"./components/Info\";\nimport Load from './components/Loading'\nimport Answer from \"./components/Answer\";\n\nimport { CALCULATING, FINISHED, NEW } from \"./components/constants\";\n\nfunction App() {\n  let questions = [\n    {\n      question: \"How many hours of sleep did Rosie get?\",\n      factor: 4,\n      unit: \"hours\",\n      type: \"number\",\n    },\n    {\n      question: \"How many cups of coffee did Rosie drink today?\",\n      factor: 8,\n      unit: \"cups\",\n      type: \"number\",\n    },\n    {\n      question: \"How many hours of homework does Rosie have?\",\n      factor: -1,\n      exponential: 2,\n      unit: \"hours\",\n      type: \"number\",\n    },\n    {\n      question: \"How full is Rosie's stomach?\",\n      factor: 1,\n      unit: \"%\",\n      type: \"number\",\n    },\n    {\n      question: \"How many hugs did Rosie get from Steven?\",\n      factor: 400,\n      unit: \"hugs\",\n      type: \"number\",\n    },\n  ];\n  \n  const [answers, setAnswers] = useState(Array(questions.length).fill(\"0\"));\n  const [totalHappiness, setTotalHappiness] = useState(0);\n  const [state, setState] = useState(NEW);\n\n  useEffect(() => {\n    if (state === CALCULATING){\n      setTimeout(() => {\n        let temp = 0;\n        answers.map((answer, index) => {\n          if (questions[index].exponential)\n            temp += (answer ** questions[index].exponential * questions[index].factor)\n          else\n            temp += answer * questions[index].factor;\n        })\n\n        setTotalHappiness(temp)\n        setState(FINISHED);\n      }, 5000)\n    }\n  }, [state])\n\n  let handleInputChange = (index) => (event) => {\n    let value = event.target.value\n    \n    let temp = [...answers];\n    temp[index] = value;\n\n    setAnswers(temp)\n  }\n\n  let onSubmitClick = () => {\n    setState(CALCULATING);\n  }\n\n  let onBackClick = () => {\n    setAnswers(Array(questions.length).fill(\"0\"));\n    setState(NEW);\n  }\n\n  return (\n    <div>\n      <Header />\n      <Info />\n      { state === NEW && <Cards questions={questions} answers={answers} onChange={handleInputChange} onSubmitClick={onSubmitClick}/>}\n      { state === CALCULATING && <Load />}\n      { state === FINISHED && <Answer totalHappiness={totalHappiness} onBackClick={onBackClick}/>}\n    </div>\n  );\n}\n\nexport default App;\n","let NEW = 0;\nlet CALCULATING = 1;\nlet FINISHED = 2;\n\n\nexport { NEW, CALCULATING, FINISHED}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}